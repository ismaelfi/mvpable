name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: mvpable_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: none

      - name: Copy .env
        run: cp .env.example .env.testing

      - name: Update .env.testing
        run: |
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env.testing
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env.testing
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env.testing
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=mvpable_test/' .env.testing
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env.testing
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env.testing

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Generate key
        run: php artisan key:generate --env=testing

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run database migrations
        run: php artisan migrate --env=testing --force

      - name: Run tests
        run: php artisan test